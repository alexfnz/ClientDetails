// <auto-generated />
using System;
using ClientDetails.Repositorio.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientDetails.Repositorio.Migrations
{
    [DbContext(typeof(ClientDetailsContexto))]
    [Migration("20230506135056_CargaCompleta")]
    partial class CargaCompleta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClientDetails.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CodExterno")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CodSistema")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Segmento")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cnpj = "98.654.321/0009-88",
                            CodExterno = "321",
                            CodSistema = "4567",
                            Email = "cliente@teste.com",
                            Endereco = "Rua dotnet, 2220",
                            Nome = "FNZ Inc",
                            Segmento = "TI",
                            Telefone = "6295555-5555"
                        });
                });

            modelBuilder.Entity("ClientDetails.Dominio.Entidades.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cargo = "Dev",
                            Email = "contatodev@teste.com",
                            Nome = "Eliana",
                            Telefone = "6299999-9999"
                        },
                        new
                        {
                            Id = 2,
                            Cargo = "RH",
                            Email = "contatorh@teste.com",
                            Nome = "Roberto",
                            Telefone = "6299999-9999"
                        },
                        new
                        {
                            Id = 3,
                            Cargo = "Suporte",
                            Email = "contatosup@teste.com",
                            Nome = "Alan",
                            Telefone = "6299999-9999"
                        });
                });

            modelBuilder.Entity("ClientDetails.Dominio.Entidades.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Colaborador")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DataExecucao");

                    b.Property<string>("TipoTarefa")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tarefas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colaborador = "Roberto",
                            DataExecucao = new DateTime(2023, 5, 6, 10, 50, 55, 858, DateTimeKind.Local).AddTicks(6421),
                            TipoTarefa = "Corretiva"
                        },
                        new
                        {
                            Id = 2,
                            Colaborador = "Eliana",
                            DataExecucao = new DateTime(2023, 5, 6, 10, 50, 55, 859, DateTimeKind.Local).AddTicks(2974),
                            TipoTarefa = "Preventiva"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
